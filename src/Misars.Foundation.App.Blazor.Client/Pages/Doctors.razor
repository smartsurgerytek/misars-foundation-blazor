

@page "/doctors"

@attribute [Authorize(AppPermissions.Doctors.Default)]
@using Misars.Foundation.App.Doctors
@using Misars.Foundation.App.Localization
@using Misars.Foundation.App.Shared
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Components.Web
@using Blazorise
@using Blazorise.Components
@using Blazorise.DataGrid
@using Volo.Abp.BlazoriseUI
@using Volo.Abp.BlazoriseUI.Components
@using Volo.Abp.ObjectMapping
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout

@using Misars.Foundation.App.Permissions
@using Volo.Abp.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components
@using Volo.Abp.Http.Client
@inherits AppComponentBase
@inject IDoctorsAppService DoctorsAppService

@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<AppResource> LH
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["Doctors"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

@* ************************* SEARCH ************************* *@
<Card>
    <CardBody>
@*//<suite-custom-code-block-1>*@
@*//</suite-custom-code-block-1>*@
        <Form id="DoctorSearchForm" class="mb-3">
            <Addons>
                <Addon AddonType="AddonType.Body">
                    <TextEdit @bind-Text="@Filter.FilterText"
                              Autofocus="true"
                              Placeholder="@L["Search"]">
                    </TextEdit>
                </Addon>
                <Addon AddonType="AddonType.End">
                    <SubmitButton Form="DoctorSearchForm" Clicked="GetDoctorsAsync">
                        <Icon Name="IconName.Search" Class="me-1"></Icon>@L["Search"]
                    </SubmitButton>
                </Addon>
            </Addons>
        </Form>
        
        <Row Class="mt-3 mb-3"> 
            <div class="col-md-12">
                <a href="javascript:;" class="text-decoration-none" @onclick="() => ShowAdvancedFilters = !ShowAdvancedFilters">@L["SeeAdvancedFilters"]</a>
            </div>
        </Row>
        
        <div style="display: @(!ShowAdvancedFilters ? "none" : "block")">
            <Row>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["name"]</FieldLabel>
                        <TextEdit Text="@Filter.name" TextChanged="@OnnameChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["DoctorID"]</FieldLabel>
                        <TextEdit Text="@Filter.DoctorID" TextChanged="@OnDoctorIDChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Specialty"]</FieldLabel>
                        <TextEdit Text="@Filter.Specialty" TextChanged="@OnSpecialtyChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Department"]</FieldLabel>
                        <TextEdit Text="@Filter.Department" TextChanged="@OnDepartmentChangedAsync" />                       
                    </Field>
                </Column>
            </Row>
@*//<suite-custom-code-block-2>*@
@*//</suite-custom-code-block-2>*@
        </div>

@*//<suite-custom-code-block-3>*@
@*//</suite-custom-code-block-3>*@
    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<Card>
    <CardBody>        
        @if (SelectedDoctors.Any())
        {
            <div class="d-flex justify-content-between align-items-center mb-2">
                @if (AllDoctorsSelected)
                {
                    <p class="lead mb-0">
                        @L["AllItemsAreSelected", TotalCount]
                    </p>
                }
                else
                {
                    <p class="lead mb-0">
                        @if (SelectedDoctors.Count > 1)
                        {
                            @L["NumberOfItemsOnThisPageAreSelected", SelectedDoctors.Count]
                        }
                        else
                        {
                            @L["OneItemOnThisPageIsSelected"]
                        }
                    </p>
                }
                    
                <div>
                    @if ((SelectedDoctors.Count == PageSize || SelectedDoctors.Count == DoctorList.Count) && TotalCount > SelectedDoctors.Count)
                    {
                        if (!AllDoctorsSelected)
                        {
                            <Button Clicked="SelectAllItems" Class="mx-1 btn-outline-secondary">@L["SelectAllItems", TotalCount]</Button>
                        }
                        else
                        {
                            <Button Clicked="ClearSelection" Class="mx-1 btn-outline-secondary">@L["ClearSelection"]</Button>
                        }
                    }
                    
                    <Button Color="Color.Danger" Class="mx-1" Size="Size.Medium" Clicked="DeleteSelectedDoctorsAsync">
                        <Icon Name="@IconName.Delete" /> @L["Delete"]
                    </Button>
                </div>
            </div>
            
            <hr class="my-1 mx-0"/>
        }
        <DataGrid TItem="DoctorDto"
                  Data="DoctorList"
                  
                  SelectionMode="DataGridSelectionMode.Multiple"
                  SelectedRows="SelectedDoctors"
                  RowSelectable="@((args) => CanDeleteDoctor)"
                  SelectedRowsChanged="SelectedDoctorRowsChanged"
                  
                  
                  
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  Responsive="true"
                  PageSize="PageSize"
                  Class="datagrid-detail">
            <LoadingTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                       <RadarSpinner />
                    </Column>
                </Row>
            </LoadingTemplate>
            <EmptyTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                        <Heading Size="HeadingSize.Is4" TextAlignment="TextAlignment.Center">@L["NoDataAvailable"]</Heading>
                    </Column>
                </Row>
            </EmptyTemplate>   
            <DataGridColumns>
                
                @if (CanDeleteDoctor && DoctorList.Any())
                {
                    <DataGridMultiSelectColumn TItem="DoctorDto" DisplayOrder="-1" Width="30px"></DataGridMultiSelectColumn>
                }
                
                <DataGridEntityActionsColumn TItem="DoctorDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="DoctorDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="DoctorDto"
                                          Visible="@CanEditDoctor"
                                          Clicked="async () => await OpenEditDoctorModalAsync(context)"
                                          Text="@L["Edit"]"></EntityAction>
                            <EntityAction TItem="DoctorDto"
                                          Visible="@CanDeleteDoctor"
                                          Clicked="() => DeleteDoctorAsync(context)"
                                          ConfirmationMessage="@(()=> L["DeleteConfirmationMessage"])"
                                          Text="@L["Delete"]"></EntityAction>
@*//<suite-custom-code-block-4>*@
@*//</suite-custom-code-block-4>*@
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>
               
              <DataGridColumn TItem="DoctorDto"
                      Field="name"
                      Caption="@L["name"]">
              </DataGridColumn>

              <DataGridColumn TItem="DoctorDto"
                      Field="DoctorID"
                      Caption="@L["DoctorID"]">
              </DataGridColumn>

              <DataGridColumn TItem="DoctorDto"
                      Field="Specialty"
                      Caption="@L["Specialty"]">
              </DataGridColumn>

              <DataGridColumn TItem="DoctorDto"
                      Field="Department"
                      Caption="@L["Department"]">
              </DataGridColumn>

            </DataGridColumns>
            
            
        </DataGrid>
    </CardBody>
</Card>

@* ************************* CREATE MODAL ************************* *@
<Modal @ref="CreateDoctorModal" Closing="@CreateDoctorModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
@*//<suite-custom-code-block-5>*@
@*//</suite-custom-code-block-5>*@
        <Form id="CreateDoctorForm">
            <ModalHeader>
                <ModalTitle>@L["NewDoctor"]</ModalTitle>
                <CloseButton Clicked="CloseCreateDoctorModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@NewDoctorValidations"
                            Mode="ValidationMode.Auto"
                            Model="@NewDoctor"
                            ValidateOnLoad="false">
                    
                    
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["name"]</FieldLabel>
                            <TextEdit @bind-Text="@NewDoctor.name" MaxLength="DoctorConsts.nameMaxLength" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["DoctorID"]</FieldLabel>
                            <TextEdit @bind-Text="@NewDoctor.DoctorID" MaxLength="DoctorConsts.DoctorIDMaxLength" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Specialty"]</FieldLabel>
                            <TextEdit @bind-Text="@NewDoctor.Specialty" MaxLength="DoctorConsts.SpecialtyMaxLength" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Department"]</FieldLabel>
                            <TextEdit @bind-Text="@NewDoctor.Department" MaxLength="DoctorConsts.DepartmentMaxLength" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    
                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateDoctorModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="CreateDoctorForm" Clicked="CreateDoctorAsync"/>
@*//<suite-custom-code-block-6>*@
@*//</suite-custom-code-block-6>*@
            </ModalFooter>
        </Form>
@*//<suite-custom-code-block-7>*@
@*//</suite-custom-code-block-7>*@
    </ModalContent>
</Modal>

@* ************************* EDIT MODAL ************************* *@
<Modal @ref="EditDoctorModal" Closing="@EditDoctorModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
@*//<suite-custom-code-block-8>*@
@*//</suite-custom-code-block-8>*@
        <Form id="EditDoctorForm">
            <ModalHeader>
                <ModalTitle>@L["Update"]</ModalTitle>
                <CloseButton Clicked="CloseEditDoctorModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditingDoctorValidations"
                            Mode="ValidationMode.Auto"
                            Model="@EditingDoctor"
                            ValidateOnLoad="false">
                    
                    
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["name"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingDoctor.name" MaxLength="DoctorConsts.nameMaxLength" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["DoctorID"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingDoctor.DoctorID" MaxLength="DoctorConsts.DoctorIDMaxLength" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Specialty"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingDoctor.Specialty" MaxLength="DoctorConsts.SpecialtyMaxLength" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Department"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingDoctor.Department" MaxLength="DoctorConsts.DepartmentMaxLength" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    
                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditDoctorModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="EditDoctorForm" Clicked="UpdateDoctorAsync" />
@*//<suite-custom-code-block-9>*@
@*//</suite-custom-code-block-9>*@
            </ModalFooter>
        </Form>
@*//<suite-custom-code-block-10>*@
@*//</suite-custom-code-block-10>*@
    </ModalContent>
</Modal>

