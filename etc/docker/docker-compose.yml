version: '3.8'

services:
  app-blazor:
    image: misars.foundation/app-blazor:latest
    container_name: app-blazor
    build:
      context: ../../
      dockerfile: src/Misars.Foundation.App.Blazor/Dockerfile.local
    ports:
      - "44307:80"
    depends_on:
      - app-api
    restart: on-failure
    volumes:
      - ./appsettings.json:/usr/share/nginx/html/appsettings.json
    networks:
      - abp-network

  app-api:
    image: misars.foundation/app-api:latest
    container_name: app-api
    hostname: app-api
    build:
      context: ../../
      dockerfile: src/Misars.Foundation.App.HttpApi.Host/Dockerfile.local
    environment:
      - ASPNETCORE_URLS=https://+:443;http://+:80;
      - Kestrel__Certificates__Default__Path=/root/certificate/localhost.pfx
      - Kestrel__Certificates__Default__Password=d9567e4c-2741-40fa-98bf-d56580f8b948
      - App__SelfUrl=https://localhost:44354
      - App__CorsOrigins=http://localhost:44307
      - App__HealthCheckUrl=http://app-api/health-status
      - AuthServer__RequireHttpsMetadata=false
      - AuthServer__Authority=https://localhost:44354
      - ConnectionStrings__Default=DataSource=/data/App.db
    ports:
      - "44354:443"
    depends_on:
      sqlite:
        condition: service_healthy
    restart: on-failure    
    volumes:
      - sqlite_data:/data
      - ./certs:/root/certificate
    networks:
      - abp-network
  


  db-migrator:
    image: misars.foundation/app-db-migrator:latest
    container_name: db-migrator
    build:
      context: ../../
      dockerfile: src/App.DbMigrator/Dockerfile.local
    environment:
      - OpenIddict__Applications__App_Blazor__RootUrl=http://localhost:44307
      - ConnectionStrings__Default=DataSource=/data/App.db
      - Redis__Configuration=redis
    restart: on-failure
    volumes:
      - sqlite_data:/data
    depends_on:
      sqlite:
        condition: service_healthy
    networks:
      - abp-network    
  
  sqlite:
    container_name: sqlite-container
    image: alpine:latest    
    command: sh -c "apk add sqlite && touch /data/App.db && sqlite3 /data/App.db '.databases' && tail -f /dev/null"
    environment:
      - TZ=UTC
    volumes:
      - sqlite_data:/data
    networks:
      - abp-network
    healthcheck:
      test: ["CMD-SHELL", "if [ -f /data/App.db ]; then exit 0; else exit 1; fi"]
      interval: 10s
      timeout: 3s
      retries: 10  
volumes:
  sqlite_data:
    name: app_sqlite_data
networks:
  abp-network:
    name: app-network
    driver: bridge